=========================
HTML 実践編
=========================
HTMLの実践的テクニックについて少々。

トップダウンでコーディング
=========================
「トップダウン」という表現は著者が勝手にそう読んでいるだけなので恐らく検索してもこの言葉ではヒットしません。

「コーディング」というのはコンピューター言語を書くことです。マークアップ言語の世界でも、
プログラミングの世界でもそうです。日本語を書くように順番にHTMLを書き続けるのではなく、大きいタグから順番に書いて行く事をここではトップダウンと呼ぶ事にします。「大きい要素」については後述します。

まず最初にこんな感じで書きます。

::

	<!docutype html>
	<html>
	<head>
	<title>タイトル</title>
	<link rel="stylesheet" href="design.css">
	</head>
	<body>
	本文
	</body>
	</html>

のように書きます。この時いちばん大きいタグというのは「htmlタグ」です。これの子要素が「head」,「body」です。この様な包括関係を「親要素」「子要素」などと表現します。

ヘッダー・フッター
========================
Webサイトと聞いてどのようなレイアウトかと言うと、と今はデザイン論が確立されているので、想像しやすいと思います。

ページ上部に「会社概要」「製品」「プレスリリース」など主だったメニューが並び、このメニューはそのWebサイト内では一貫しています。この一貫したメニューを「グローバルナビゲーションバー」等と一般的に呼びます。そして、ページ上部にあるロゴなども含めて「ヘッダー」と呼びます。

同様に、ページ下部にあるサイト内で一貫した部分を「フッター」と呼びます。

このデザインの慣例にしたがってHTMLをコーディングしてみます。もちろんトップダウンに。

::

	<!docutype html>
	<html>
	<head>
	<title>タイトル</title>
	<link rel="stylesheet" href="design.css">
	</head>
	<body>	
	<div id="outline">
	<div id="header"></div>
	<div id="content"></div>
	<div id="footer"></div>
	</div>
	</body>
	</html>

bodyタグの直下にoutlineという名前のdivタグを配置し、その中にheader,content,footerという名前のdivタグを配置しています。ヘッダー・フッターに対応する「中身」を表すid名として「content」がよく用いられます。

2カラムレイアウト
======================
※CSSの演習編でさらに細かいサンプルソースがありますので、そちらも参照されたし。ここではマークアップの側面から説明します。

これも「よくあるWebデザイン」の話なのですが、ブログを見ていると記事の部分と、その左右に「カテゴリ」とか「カレンダー」とか「タグクラウド」などのブログパーツがある部分で左右に別れている事が多いです。2列(2カラム)でデザインされているので「2カラムレイアウト」と呼ぶ事が多いです。応用例として3カラムレイアウトもありますがここでは解説しません。

記事本文のカラムを「メインバー」、もうひとつのカラムを「サイドバー」と呼びます。では2カラムレイアウトを書いてみましょう。

::

	<!docutype html>
	<html>
	<head>
	<title>タイトル</title>
	<link rel="stylesheet" href="design.css">
	</head>
	<body>	
	<div id="outline">
	<div id="header"></div>
	<div id="content">
	<div id="main"></div>
	<div id="sidebar"></div>
	</div>
	<div id="footer"></div>
	</div>
	</body>
	</html>

これで枠がだいたい整って来ましたね。メインバーとサイドバーのどちらを右にあるいは左に配置するか、という事はCSSでも変更できるのであまり気にしなくても大丈夫です。しかしhtmlのソース上メインバーの後にサイドバーを書く事をお勧めします。

「トップダウン コーディング」「ヘッダーフッター」「2カラムレイアウト」と別々の概念の様に扱いましたが、どれも似たようなものですね。

ここまでで枠が作れたので、この枠の中にコンテンツ(具体的な情報)を書き込んでいくと良いと思います。

「視覚的に捉えるのではなく、意味を捉えて構造化する」という事は何度も書いて来ましたが、この項目はまさにその哲学が生きていると言えます。そのページでもっとも重要な情報はメインバーに記述されるべきだし、グローバルメニューもサイト訪問者が迷わない様に導いてやる役を負っています。どの要素の中にどんな情報は入れたら構造的に綺麗になるか、という事を考えてみて下さい。